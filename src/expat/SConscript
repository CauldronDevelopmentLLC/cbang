Import('*')

env.CBDefine('HAVE_EXPAT')
env.CBDefine('XML_STATIC')

env = env.Clone()

# Remove warnings
import re
flags = env.subst('${CCFLAGS}')
flags = re.sub(r'-W((all)|(error))(=[^\s$]+)?(\s|$)', '', flags)
env.Replace(CCFLAGS = flags)

if not env.GetOption('clean'):
    if env.get('compiler_mode', '') == 'gnu':
        env.Append(CFLAGS = ['-fexceptions'])

    env.Append(CPPDEFINES = 'XML_CONTEXT_BYTES=1024 XML_DTD=1 XML_NS=1'.split())

    if conf.CheckFunc('memmove'): env.CBDefine('HAVE_MEMMOVE')
    if conf.CBCheckCHeader('strings.h') and conf.CheckFunc('bcopy'):
        env.CBDefine('HAVE_BCOPY')

    # Endian
    import sys
    if sys.byteorder == 'little': order = '1234'
    else: order = '4321'
    env.CBDefine('BYTEORDER=' + order)

lib = env.Library('#/lib/expat', 'xmlparse.c xmltok.c xmlrole.c'.split())

hdrs = env.Install(dir = '#/include', source = ['expat.h', 'expat_external.h'])
Depends(lib, hdrs)

Return('lib')
