import os

env = Environment(ENV = os.environ,
                  TARGET_ARCH = os.environ.get('TARGET_ARCH', 'x86'))
env.Tool('config', toolpath = [Dir('#/..')])
env.CBLoadTools('compiler cbang', paths = [str(Dir('#/..'))])
conf = env.CBConfigure()

# Build Info
env.CBLoadTool('build_info')
env.Replace(BUILD_INFO_NS = 'cb::BuildInfo')

# Configure
if not env.GetOption('clean'):
    conf.CBConfig('compiler')
    conf.CBConfig('cbang')
    env.CBDefine('USING_CBANG') # Using CBANG macro namespace

# Test
Export('env')
tests = []
for test in Glob('*Tests'):
    script = str(test) + '/SConscript'
    if not os.path.exists(script): continue

    if str(test) in ('cryptoTests', 'httpTests', 'iostreamTests', 'serverTests'
                     ) and not env.CBConfigEnabled('openssl'):

        for t in Glob('%s/*Test' % test):
            open('%s/disable' % t, 'w').close()

    else: tests.append(SConscript(script))

conf.Finish()

test = Command('test', '', './testHarness')
Depends(test, tests)

Default(tests)
Clean(tests, test)
